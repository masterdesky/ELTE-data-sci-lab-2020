* title slide *
Hello everyone! Today I would like to summarizes all of my goals and accomplishments of the Cosmic Microwave Background radiaton project. I was a bit anxious and clueless about this presentation, since last time I've actually already summarized shortly all the work I've done in this project. So today I would like to very briefly summarize again everything and then show you many figures and actual results I've obtained during the project.

*slide 1*
So now, you may remember, that I'm working on the Cosmic Microwave Background in two different aspects. First: I'm trying to simulate a realistic mock image of the intensity map of the temperature anisotropy in the CMB. And also I would be really happy if I could generate completely proportional full-sky maps of the CMB. Second: I would like to process and analyze real observations and measurements. For example the most recent one made by the Planck space observatory between (2009) two-thousand nine and (2013) two-thousand thirteen. In this second task I'm mainly ought to extract the angular power spectrum, but optionally (and hopefully) determine some cosmological parameters from the lambda-CDM model.

*slide 2*
As I already mentioned last time, not only my project consist of two parts, but there there are two different parts of the simulation itself too, and these two utilizes completely different methods for map generation. The first method is very simple. It simply uses already fully implemented routines from the HEALPix standard to generate an arbitrary CMB map from an input angular power spectrum. In this case the output is a completely randomly generated, but it is proportional full-sky map.
The second algorithm is much more complex. It consist of numerous subroutines and can be segmented into three different parts. The methodology of this generation method is that it simulates individually all of the different astrophysical and other components which constructs a real CMB image, using only the angular power spectrum as its input. After the pre-generation of these various maps, they can be superimposed over each other as a kind of layers. (So you'll have a layer for the pure CMB map, then different layers on top of that for the different foreground objects, then again, different maps for the different noise layers, etc.)

*slide 3*
On this slide, you can see some sample outputs using the first method. In this case a 1-dimensional HEALPix array - corresponding to the whole sky - is generated and then mapped to an arbitrary projection. (Here it is mapped to the Mollweide projection, which is usually used for CMB maps.) This routine can take into account the beam profile of the simulated instrument. For this it should be noted, that the beam is always considered to be Gaussian. So on the left side we can see two images of a beam with "full width at half maximum" of 3 arcminutes and with the standard deviation of its FWHM of 0.5 arcminutes while on the right side you can see two images with 30 arcminutes FWHM and 15 arcminutes sigma. The consequence of higher FWHMs and sigmas, so wider beams is obviously worse images. Images of the CMB temperature map with lower resolution. Maybe you can even see on these images, that the two on the right is much more blurry. I'm not sure if you can see it clearly enough through this stream.

*slide 4*
The outputs from the second method is a bit more complex. I've mentioned that this second routine generates all the different layers of the CMB individually, so we'll have a pure CMB image as an output, a map of point sources as an output, a map of Sunyaev-Zeldovich sources, and maps for all different noises. And after all of these we can merge them into one image to have a final result.
On this slide you can see two sample outputs of the first layer, these are pure CMB temperature maps, without any artificial distortion. They're seems a bit blurry, because I'm simulating a finite number of pixels, which of course limits the resolution of the original map. Also another limit arises from the finite sampling frequency of the input power spectrum.

*slide 5*
On this second slide you can see the foreground source maps. On the left side the point source map and on the right side the map of the thermal component of the Sunyaev-Zeldovich effect. On the left side you probably see nothing on the image, because Teams obviously compresses the video image by lot. But you should definitely believe me, the figure is full of small red pixels that symbolizes the point sources. On the right side however the sources are clearly visible. I'm not sure if I've ever mentioned these, but point sources arise from like Active Galactic Nuclei (AGNs), Dust Star Forming Galaxies and similar object like these. While the Sunyaev-Zeldovich effect is caused by dense galaxy clusters. As CMB photons propagate through these clusters with full of high-energy electrons, they interact with each other through inverse Coulomb scattering. The electrons give a boost to the CMB photons, and changing their temperature, polarization, etc. Of course near the center of a cluster this is more impactful, than away from it. That's why these sources seems to have some kind of "Gaussian" profile. They're the brightest in the center and are slowly fading away by moving away from the middle. Okay, yes, it is actually a beta profile, since I've convolved them with a beta function.

*slide 6*
On the third slide I wanted to show you the effect of the beam size. I've already covered it in case of the first method, but here you can see it in much more detail. On the left side I have a pure CMB map, with the layer of the foreground sources already superimposed on it, maybe you can see the small points and patches all over the map. While on the right side there is a map made by a simulated instrument with beam FWHM 10 arcminutes. Now the effects are much more trivial, than in the first case. The Planck observatory actually have beams with FWHM of 3-5 arcminutes.

*slide 7*
And at the last slide the generated noise maps can be seen. Noises are literally everywhere. White noise and pink noise (or 1 over f noise) - both seen at the two sides of this figure - are very common in nature. They're are literally in everything and in every measurement. So if we want to realistically simulate an observed CMB map, we need to incorporate them in our model. Both of them are considered to be Gaussian noise in this simulation, and you can already see their effects on this figure. In the center there is a noise component accountable for the atmospheric perturbations. Why is it here? Not every CMB measurements are made from the space, but there are a number of ground-based CMB observatories as well. If we want to generalize this simulation and included these telescopes too, we have to take into account this source of noise as well. That's why it's also here.

And that concludes the simulation part of the project.

*slide 8*
The analysis part is much shorter and I want mostly only to speak about it. So as I've mentioned at the start of this presentation, my main goal was to extract the angular power spectrum from real observations. For this I've processed the measurements made by the Planck space telescope. I've written a complete pipeline, which you can input an arbitrary HEALPix array (particularly a temperature map) and it outputs the power spectrum of the map in question and compares it to the LambdaCDM cosmology. You can see an output of this pipeline, where the input was one random, processed temperature map of the Planck telescope. I've even mentioned in one of my presentations, that for the difference at higher multipoles the instrument noises are to blame.

Here my extra task was to extract some cosmological parameters from this power spectrum. And this is of course a very important analysis regarding the CMB. One of the main motivations to make CMB measurements is to get better insight about cosmological parameters. But sadly I didn't got any good results from the analysis I've tried. The general method used for this in research is to explore the parameter space of the LambdaCDM model, generate likelihood for this grid based on the parameters in this multi-dimensional grid and the power spectrum and you got multi-dimensional likelihood space. Now on a basic level it can be optimalized with MCMC algorithm. But I had very limited time, and I my model didn't converged to sensible values.

And that's all I've done in this project, thank you for your attention!